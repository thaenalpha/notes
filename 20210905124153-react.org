:PROPERTIES:
:ID:       8b81de25-b0b5-435c-99a2-cbebf03937fc
:END:
#+title: React
* tutorial
** [[https://www.youtube.com/watch?v=m_u6P5k0vP0][Full Stack React & Firebase Tutorial - Build a social media app - YouTube]]
Source: [2021-09-05 Sun],
 #+BEGIN_QUOTE
Amazing. I've been learning MERN development for the last year but this was the first app I've built both front and backend together all thanks to you. I learned some very important lessons, one being that Redux is outdated thanks for function based components. Secondly this project gave me a lot of motivation and confidence. I feel so much more prepared now. Thank you
#+END_QUOTE
* Useful information
Redux is outdated thanks for function based components.
* Immer
Source: [2021-11-15 Mon], https://immerjs.github.io/immer/
 #+BEGIN_QUOTE
Immer: Immutability the easy way
#+END_QUOTE
** Introduction
*** A quick example for comparison
**** With Immer
#+begin_src js
const baseState = [
    {
        title: "Learn TypeScript",
        done: true
    },
    {
        title: "Try Immer",
        done: false
    }
]

const nextState = baseState.slice() // shallow clone the array
nextState[1] = {
    // replace element 1...
    ...nextState[1],            // with a shallow clone of element 1
    done: true                  // ...combined with the desired update
}
nextState.push({title: "Tweet about it"})
console.log(nextState)
#+end_src

#+RESULTS:
: [{ title: 'Learn TypeScript '(\, done:) true } (\, {) title: 'Try Immer '(\, done:) true } (\, {) title: 'Tweet about it '}]

**** Without Immer
#+begin_src js :tangle try-next/pages/immer.js
import produce from "immer"

const nextState = produce(baseState, draft => {
    draft[1].done = true
    draft.push({title: "Tweet about it"})
})
console.log(nextState)
#+end_src
