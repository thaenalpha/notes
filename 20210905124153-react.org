:PROPERTIES:
:ID:       8b81de25-b0b5-435c-99a2-cbebf03937fc
:END:
#+title: React
- Was first released in 2013
- Was original created by Jordan Walke
- Has well over 100k starts on GitHub
- Is maintained by Facebook

* Courses :video:

** [[id:056cc821-5d05-48fe-b52f-1783876f4fe7][React Course For Beginners]]
: Learn React in 8 Hours
#+source: <2022-10-06 Thu 00:00>, [[https://www.youtube.com/watch?v=f55qeKGgB_M][YouTube]]
[[yt:f55qeKGgB_M][React Course For Beginners - Learn React in 8 Hours - YouTube]]

** [[id:bab0ab23-0060-465e-942e-546d875bbd1e][React Course [2022]​]]
: Beginner's Tutorial for React JavaScript Library
#+source: <2022-08-27 Sat 18:09>, [[elisp:(evil-collection-xwidget-webkit-new-tab "www.youtube.com/watch?v=bMknfKXIFA8")][YouTube]]
[[yt:bMknfKXIFA8][React Course - Beginner's Tutorial for React JavaScript Library {2022} - YouTube]]
  - [[elisp:(evil-collection-xwidget-webkit-new-tab "scrimba.com/learn/learnreact")][Scrimba]]

** [[id:3c472463-51da-4766-b7aa-52b07cec96f0][Full React Course 2020]]
: Learn Fundamentals, Hooks, Context API, React Router, Custom Hooks
#+source: <2022-08-26 Fri 21:58>, [[elisp:(evil-collection-xwidget-webkit-new-tab "www.youtube.com/watch?v=4UZrsTqkcW4")][YouTube]]
[[yt:4UZrsTqkcW4][Full React Course 2020 - Learn Fundamentals, Hooks, Context
API, React Router, Custom Hooks - YouTube]]

** [[id:7d9c18ef-9a59-4fd2-9eb3-7154ab7eaaec][Full Stack React & Firebase Tutorial]]
: Build a social media app
#+source: [2021-09-05 Sun], [[elisp:(evil-collection-xwidget-webkit-new-tab "www.youtube.com/watch?v=m_u6P5k0vP0")][YouTube]]
[[yt:m_u6P5k0vP0][Full Stack React & Firebase Tutorial - Build a social media app - YouTube]]
#+begin_quote

Amazing. I've been learning MERN development for the last year but this was the
first app I've built both front and backend together all thanks to you. I
learned some very important lessons, one being that Redux is outdated thanks for
function based components. Secondly this project gave me a lot of motivation and
confidence. I feel so much more prepared now. Thank you

#+end_quote
— one comment on YouTube.

* Useful information
Use function based components for Redux.

* [[elisp:(evil-collection-xwidget-webkit-new-tab "//immerjs.github.io/immer/")][Immer]]
:PROPERTIES:
:ID:       b304b7f0-bd46-4279-8235-6d8d0dee8864
:ROAM_REFS: "Source: [2021-11-15 Mon], https://immerjs.github.io/immer/"
:END:

#+begin_quote

[[elisp:(evil-collection-xwidget-webkit-new-tab "//sc.vern.cc/@mweststrate/introducing-immer-immutability-the-easy-way-9d73d8f71cb3")][Immer: Immutability the easy way]]

#+end_quote

** Introduction

*** A quick example for comparison

**** Without Immer

#+begin_src js
const baseState = [
    {
        title: "Learn TypeScript",
        done: true
    },
    {
        title: "Try Immer",
        done: false
    }
]

const nextState = baseState.slice() // shallow clone the array
nextState[1] = {
    // replace element 1...
    ...nextState[1],            // with a shallow clone of element 1
    done: true                  // ...combined with the desired update
}
nextState.push({title: "Tweet about it"})
console.log(nextState)
#+end_src

#+RESULTS:
: [{ title: 'Learn TypeScript '(\, done:) true } (\, {) title: 'Try Immer '(\, done:) true } (\, {) title: 'Tweet about it '}]

**** With Immer

#+begin_src js :tangle try-next/pages/immer/index.js
import produce from "immer"

const baseState = [
    {
        title: "Learn TypeScript",
        done: true
    },
    {
        title: "Try Immer",
        done: false
    }
]

const nextState = produce(baseState, draft => {
    draft[1].done = true
    draft.push({ title: "Tweet about it" })
})
console.log(nextState)

export default function ImmerPage() {
    return (
        <div className="container">
            <main>
                {nextState.map((todo, i) => {
                    return <pre key={i}>{todo.title}</pre>
                })}
            </main>
        </div>
    )
};
#+end_src

#+RESULTS:

*** [[elisp:(evil-collection-xwidget-webkit-new-tab "//immerjs.github.io/immer/#how-immer-works")][How Immer works]]
:PROPERTIES:
:ID:       909646c1-fc73-4e14-b2d2-1c2c681df274
:ROAM_REFS: "Source: [2021-11-16 Tue], [[https://immerjs.github.io/immer/#how-immer-works][How Immer works]]"
:END:

#+begin_quote

Using [[id:b304b7f0-bd46-4279-8235-6d8d0dee8864][Immer]] is like having a personal assistant. The assistant takes a
letter (the current state) and gives you a copy (draft) to jot changes
onto. Once you are done, the assistant will take your draft and produce
the real immutable, final letter for you (the next state).

#+end_quote

** Installation

[[id:b304b7f0-bd46-4279-8235-6d8d0dee8864][Immer]] can be installed as a direct dependency, and will work in any ES5
environment:

#+begin_quote

Yarn: ~yarn add immer~

NPM: ~npm install immer~

CDN: Exposed global is immer

Unpkg: <script src="https://unpkg.com/immer"></script>

JSDelivr: <script src="https://cdn.jsdelivr.net/npm/immer"></script>

⚠ When using a CDN, it is best to check the url in your browser and see
what version it resolves to, so that your users aren't accidentally served
a newer version in the future when updates are release. So use an url
like: https://unpkg.com/immer@6.0.3/dist/immer.umd.production.min.js
instead. Substitute production.min with development in the URL for a
development build.

#+end_quote

The following features can be opt-in to:

Source: [2021-11-16 Tue], [[elisp:(evil-collection-xwidget-webkit-new-tab "//immerjs.github.io/immer/installation#pick-your-immer-version")][Pick your Immer version]]

 #+begin_quote

|----------------------------+--------------------|
| Feature                    | Method to call     |
|----------------------------+--------------------|
| ES 5 support               | enableES5()        |
| ES2015 Map and Set support | enableMapSet()     |
| JSON Patch support         | enablePatches()    |
| All of the above           | enableAllPlugins() |
|----------------------------+--------------------|
For example, if you want to use produce on a Map, you need to enable this
feature once during the start of your application:

#+end_quote

 In your application's entrypoint

#+begin_src js :tangle try-next/pages/immer/mapset.js
const {enableMapSet} = require("immer")

enableMapSet()
#+end_src

...Later

#+begin_src js :tangle try-next/pages/immer/mapset.js
const produce = require('immer');

const usersById_v1 = new Map([
    ["Thaen", { name: "Nopanun Laochunhanun", country: "NL" }]
])

const usersById_v2 = produce(usersById_v1, draft => {
    draft.get("Thaen").country = "TH"
})

module.exports = function MapsetPage() {
    return { v1: usersById_v1, v2: usersById_v2 }
}
#+end_src

#+begin_src js :tangle try-next/pages/immer/mapset.test.js
const usersById = require('./mapset');

expect(usersById().v1.get("Thaen").country).toBe("NL")
expect(usersById().v2.get("Thaen").country).toBe("TH")
#+end_src

* JEST
:PROPERTIES:
:ID:       00e98a80-1f86-472d-af7c-01fbf2ecffba
:END:

** Getting Started

Install as dev Dependency

#+begin_src js :tangle try-next/pages/sum.js
function sum(a, b) {
  return a + b;
}
module.exports = sum;
#+end_src

#+begin_src js :tangle try-next/pages/sum.test.js
const sum = require('./sum');

test('adds 1 + 2 to eq 3', () => {
    expect(sum(1, 2)).toBe(3);
});
#+end_src
